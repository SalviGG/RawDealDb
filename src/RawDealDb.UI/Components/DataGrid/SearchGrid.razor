@using RawDealDb.Core.DTO;
@using RawDealDb.Core.Enums;
@using RawDealDb.UI.Interfaces;
@inject ICardService _cardService;


<MudDataGrid T="CardDto" Items="@_cards" Filterable="true" QuickFilter="@_quickFilter" 
                Bordered="true">
    <ToolBarContent>
        <MudSelect T="int" Label="Search by" AnchorOrigin="Origin.BottomCenter" @bind-Value="_selectValue">
            @foreach (var searchByItem in _searchByDto.SearchByValues)
            {
                <MudSelectItem Value="searchByItem.Key">@searchByItem.Value</MudSelectItem>
            }
        </MudSelect>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search value" Adornment="Adornment.Start" Immediate="true"
                        AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        <MudSpacer/>
    </ToolBarContent>
    <Columns>
        <Column T="CardDto" Filterable="false" Style="text-align: right;">
            <CellTemplate>
                @{
                    var srcPath = "img/Sets/" + context.Item.SetId + "/Cards/" + context.Item.Id + ".jpg";
                }
                <MudImage Src="@srcPath" Style="width: 250px;"></MudImage>
            </CellTemplate>
        </Column>
        <Column T="CardDto" Field="Name"/>
        <Column T="CardDto" Field="Format"/>
        <Column T="CardDto" Field="Traits"/>
        <Column T="CardDto" Field="CardText" Title="Card text"/>
    </Columns>
    <PagerContent>
        <MudDataGridPager T="CardDto"/>
    </PagerContent>
</MudDataGrid>

@code {
    private IEnumerable<CardDto> _cards = new List<CardDto>();
    private SearchByDto _searchByDto = new SearchByDto();
    private int _selectValue;
    private string _searchString;
    private string _displayCard;

    protected override async Task OnInitializedAsync()
    {
        _cards = await _cardService.GetAllCards();
    }

    private Func<CardDto, bool> _quickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;
        if (_selectValue == (int)SearchByEnum.CardName && x.Name.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (_selectValue == (int)SearchByEnum.Set && x.SetName.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (_selectValue == (int)SearchByEnum.Fortitude && x.Fortitude.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (_selectValue == (int)SearchByEnum.Damage && x.Damage.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (_selectValue == (int)SearchByEnum.SuperStarLogo && x.SuperStarLogo.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (_selectValue == (int)SearchByEnum.SuperStarValue && x.SuperStarValue.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    };


}
